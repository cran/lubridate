\name{as.period}
\alias{as.period}
\alias{as.period,Duration-method}
\alias{as.period,Interval-method}
\alias{as.period,Period-method}
\alias{as.period,difftime-method}
\alias{as.period,logical-method}
\alias{as.period,numeric-method}
\title{Change an object to a period.}
\usage{
  as.period(x, unit, ...)
}
\arguments{
  \item{x}{an interval, difftime, or numeric object}

  \item{unit}{A character string that specifies which time
  units to build period in. unit is only implemented for
  the as.period.numeric method and the as.period.interval
  method. For as.period.interval, as.period will convert
  intervals to units no larger than the specified unit.}

  \item{...}{additional arguments to pass to as.period}
}
\value{
  a period object
}
\description{
  as.period changes Interval, Duration, difftime and
  numeric class objects to Period class objects with the
  specified units.
}
\details{
  Users must specify which time units to measure the period
  in. The exact length of each time unit in a period will
  depend on when it occurs. See \code{\link{Period-class}}
  and \code{\link{new_period}}. The choice of units is not
  trivial; units that are normally equal may differ in
  length depending on when the time period occurs. For
  example, when a leap second occurs one minute is longer
  than 60 seconds.

  Because periods do not have a fixed length, they can not
  be accurately converted to and from Duration objects.
  Duration objects measure time spans in exact numbers of
  seconds, see \code{\link{Duration-class}}. Hence, a one
  to one mapping does not exist between durations and
  periods. When used with a Duration object, as.period
  provides an inexact estimate; the duration is broken into
  time units based on the most common lengths of time
  units, in seconds. Because the length of months are
  particularly variable, a period with a months unit can
  not be coerced from a duration object. For an exact
  transformation, first transform the duration to an
  interval with \code{\link{as.interval}}.

  Coercing an interval to a period may cause surprising
  behavior if you request periods with small units. A leap
  year is 366 days long, but one year long. Such an
  interval will convert to 366 days when unit is set to
  days and 1 year when unit is set to years. Adding 366
  days to a date will often give a different result than
  adding one year. Daylight savings is the one exception
  where this does not apply. Interval lengths are
  calculated on the UTC timeline, which does not use
  daylight savings. Hence, periods converted with seconds
  or minutes will not reflect the actual variation in
  seconds and minutes that occurs due to daylight savings.
  These periods will show the "naive" change in seconds and
  minutes that is suggested by the differences in clock
  time. See the examples below.

  as.period.difftime and as.period.duration display the
  message "estimate only: convert difftimes (or duration)
  to intervals for accuracy" by default. You can turn this
  message off by setting the global
  \code{lubridate.verbose} option to FALSE with
  \code{options(lubridate.verbose = FALSE)}.
}
\examples{
span <- new_interval(as.POSIXct("2009-01-01"), as.POSIXct("2010-02-02 01:01:01")) #interval
# 2009-01-01 CST--2010-02-02 01:01:01 CST
as.period(span)
# "1y 1m 1d 1H 1M 1S"
as.period(span, units = "day")
"397d 1H 1M 1S"
leap <- new_interval(ymd("2016-01-01"), ymd("2017-01-01"))
# 2016-01-01 UTC--2017-01-01 UTC
as.period(leap, unit = "days")
# "366d 0H 0M 0S"
as.period(leap, unit = "years")
# "1y 0m 0d 0H 0M 0S"
dst <- new_interval(ymd("2016-11-06", tz = "America/Chicago"),
ymd("2016-11-07", tz = "America/Chicago"))
# 2016-11-06 CDT--2016-11-07 CST
# as.period(dst, unit = "seconds")
# "86400S"
as.period(dst, unit = "hours")
# "24H 0M 0S"
}
\seealso{
  \code{\link{Period-class}}, \code{\link{new_period}}
}
\keyword{chron}
\keyword{classes}
\keyword{manip}
\keyword{methods}

